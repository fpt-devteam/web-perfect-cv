/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicImport } from './routes/_public'
import { Route as PrivateImport } from './routes/_private'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as PublicForbiddenImport } from './routes/_public/forbidden'
import { Route as PrivateUserDashboardImport } from './routes/_private/user-dashboard'
import { Route as PrivateAdminDashboardImport } from './routes/_private/admin-dashboard'
import { Route as AuthRegisterImport } from './routes/_auth/register'
import { Route as AuthLoginImport } from './routes/_auth/login'
import { Route as AuthForgotPasswordImport } from './routes/_auth/forgot-password'
import { Route as AuthActivationAccountIndexImport } from './routes/_auth/activation-account/index'
import { Route as Oauth2ProviderCallbackImport } from './routes/oauth2.$provider.callback'
import { Route as PrivateAdminDashboardDashboardImport } from './routes/_private/admin-dashboard/dashboard'
import { Route as AuthActivationAccountTokenImport } from './routes/_auth/activation-account/$token'
import { Route as PrivateUserDashboardResignationLetterIndexImport } from './routes/_private/user-dashboard/resignation-letter/index'
import { Route as PrivateUserDashboardCvsIndexImport } from './routes/_private/user-dashboard/cvs/index'
import { Route as PrivateUserDashboardCoverLetterIndexImport } from './routes/_private/user-dashboard/cover-letter/index'
import { Route as PrivateUserDashboardCvsCvIdImport } from './routes/_private/user-dashboard/cvs/$cvId'
import { Route as PrivateUserDashboardCvsCvIdContactIndexImport } from './routes/_private/user-dashboard/cvs/$cvId/contact/index'

// Create/Update Routes

const PublicRoute = PublicImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRoute = PrivateImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicForbiddenRoute = PublicForbiddenImport.update({
  id: '/forbidden',
  path: '/forbidden',
  getParentRoute: () => PublicRoute,
} as any)

const PrivateUserDashboardRoute = PrivateUserDashboardImport.update({
  id: '/user-dashboard',
  path: '/user-dashboard',
  getParentRoute: () => PrivateRoute,
} as any)

const PrivateAdminDashboardRoute = PrivateAdminDashboardImport.update({
  id: '/admin-dashboard',
  path: '/admin-dashboard',
  getParentRoute: () => PrivateRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const AuthForgotPasswordRoute = AuthForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)

const AuthActivationAccountIndexRoute = AuthActivationAccountIndexImport.update(
  {
    id: '/activation-account/',
    path: '/activation-account/',
    getParentRoute: () => AuthRoute,
  } as any,
)

const Oauth2ProviderCallbackRoute = Oauth2ProviderCallbackImport.update({
  id: '/oauth2/$provider/callback',
  path: '/oauth2/$provider/callback',
  getParentRoute: () => rootRoute,
} as any)

const PrivateAdminDashboardDashboardRoute =
  PrivateAdminDashboardDashboardImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => PrivateAdminDashboardRoute,
  } as any)

const AuthActivationAccountTokenRoute = AuthActivationAccountTokenImport.update(
  {
    id: '/activation-account/$token',
    path: '/activation-account/$token',
    getParentRoute: () => AuthRoute,
  } as any,
)

const PrivateUserDashboardResignationLetterIndexRoute =
  PrivateUserDashboardResignationLetterIndexImport.update({
    id: '/resignation-letter/',
    path: '/resignation-letter/',
    getParentRoute: () => PrivateUserDashboardRoute,
  } as any)

const PrivateUserDashboardCvsIndexRoute =
  PrivateUserDashboardCvsIndexImport.update({
    id: '/cvs/',
    path: '/cvs/',
    getParentRoute: () => PrivateUserDashboardRoute,
  } as any)

const PrivateUserDashboardCoverLetterIndexRoute =
  PrivateUserDashboardCoverLetterIndexImport.update({
    id: '/cover-letter/',
    path: '/cover-letter/',
    getParentRoute: () => PrivateUserDashboardRoute,
  } as any)

const PrivateUserDashboardCvsCvIdRoute =
  PrivateUserDashboardCvsCvIdImport.update({
    id: '/cvs/$cvId',
    path: '/cvs/$cvId',
    getParentRoute: () => PrivateUserDashboardRoute,
  } as any)

const PrivateUserDashboardCvsCvIdContactIndexRoute =
  PrivateUserDashboardCvsCvIdContactIndexImport.update({
    id: '/contact/',
    path: '/contact/',
    getParentRoute: () => PrivateUserDashboardCvsCvIdRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicImport
      parentRoute: typeof rootRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordImport
      parentRoute: typeof AuthImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_auth/register': {
      id: '/_auth/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_private/admin-dashboard': {
      id: '/_private/admin-dashboard'
      path: '/admin-dashboard'
      fullPath: '/admin-dashboard'
      preLoaderRoute: typeof PrivateAdminDashboardImport
      parentRoute: typeof PrivateImport
    }
    '/_private/user-dashboard': {
      id: '/_private/user-dashboard'
      path: '/user-dashboard'
      fullPath: '/user-dashboard'
      preLoaderRoute: typeof PrivateUserDashboardImport
      parentRoute: typeof PrivateImport
    }
    '/_public/forbidden': {
      id: '/_public/forbidden'
      path: '/forbidden'
      fullPath: '/forbidden'
      preLoaderRoute: typeof PublicForbiddenImport
      parentRoute: typeof PublicImport
    }
    '/_auth/activation-account/$token': {
      id: '/_auth/activation-account/$token'
      path: '/activation-account/$token'
      fullPath: '/activation-account/$token'
      preLoaderRoute: typeof AuthActivationAccountTokenImport
      parentRoute: typeof AuthImport
    }
    '/_private/admin-dashboard/dashboard': {
      id: '/_private/admin-dashboard/dashboard'
      path: '/dashboard'
      fullPath: '/admin-dashboard/dashboard'
      preLoaderRoute: typeof PrivateAdminDashboardDashboardImport
      parentRoute: typeof PrivateAdminDashboardImport
    }
    '/oauth2/$provider/callback': {
      id: '/oauth2/$provider/callback'
      path: '/oauth2/$provider/callback'
      fullPath: '/oauth2/$provider/callback'
      preLoaderRoute: typeof Oauth2ProviderCallbackImport
      parentRoute: typeof rootRoute
    }
    '/_auth/activation-account/': {
      id: '/_auth/activation-account/'
      path: '/activation-account'
      fullPath: '/activation-account'
      preLoaderRoute: typeof AuthActivationAccountIndexImport
      parentRoute: typeof AuthImport
    }
    '/_private/user-dashboard/cvs/$cvId': {
      id: '/_private/user-dashboard/cvs/$cvId'
      path: '/cvs/$cvId'
      fullPath: '/user-dashboard/cvs/$cvId'
      preLoaderRoute: typeof PrivateUserDashboardCvsCvIdImport
      parentRoute: typeof PrivateUserDashboardImport
    }
    '/_private/user-dashboard/cover-letter/': {
      id: '/_private/user-dashboard/cover-letter/'
      path: '/cover-letter'
      fullPath: '/user-dashboard/cover-letter'
      preLoaderRoute: typeof PrivateUserDashboardCoverLetterIndexImport
      parentRoute: typeof PrivateUserDashboardImport
    }
    '/_private/user-dashboard/cvs/': {
      id: '/_private/user-dashboard/cvs/'
      path: '/cvs'
      fullPath: '/user-dashboard/cvs'
      preLoaderRoute: typeof PrivateUserDashboardCvsIndexImport
      parentRoute: typeof PrivateUserDashboardImport
    }
    '/_private/user-dashboard/resignation-letter/': {
      id: '/_private/user-dashboard/resignation-letter/'
      path: '/resignation-letter'
      fullPath: '/user-dashboard/resignation-letter'
      preLoaderRoute: typeof PrivateUserDashboardResignationLetterIndexImport
      parentRoute: typeof PrivateUserDashboardImport
    }
    '/_private/user-dashboard/cvs/$cvId/contact/': {
      id: '/_private/user-dashboard/cvs/$cvId/contact/'
      path: '/contact'
      fullPath: '/user-dashboard/cvs/$cvId/contact'
      preLoaderRoute: typeof PrivateUserDashboardCvsCvIdContactIndexImport
      parentRoute: typeof PrivateUserDashboardCvsCvIdImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
  AuthActivationAccountTokenRoute: typeof AuthActivationAccountTokenRoute
  AuthActivationAccountIndexRoute: typeof AuthActivationAccountIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
  AuthActivationAccountTokenRoute: AuthActivationAccountTokenRoute,
  AuthActivationAccountIndexRoute: AuthActivationAccountIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface PrivateAdminDashboardRouteChildren {
  PrivateAdminDashboardDashboardRoute: typeof PrivateAdminDashboardDashboardRoute
}

const PrivateAdminDashboardRouteChildren: PrivateAdminDashboardRouteChildren = {
  PrivateAdminDashboardDashboardRoute: PrivateAdminDashboardDashboardRoute,
}

const PrivateAdminDashboardRouteWithChildren =
  PrivateAdminDashboardRoute._addFileChildren(
    PrivateAdminDashboardRouteChildren,
  )

interface PrivateUserDashboardCvsCvIdRouteChildren {
  PrivateUserDashboardCvsCvIdContactIndexRoute: typeof PrivateUserDashboardCvsCvIdContactIndexRoute
}

const PrivateUserDashboardCvsCvIdRouteChildren: PrivateUserDashboardCvsCvIdRouteChildren =
  {
    PrivateUserDashboardCvsCvIdContactIndexRoute:
      PrivateUserDashboardCvsCvIdContactIndexRoute,
  }

const PrivateUserDashboardCvsCvIdRouteWithChildren =
  PrivateUserDashboardCvsCvIdRoute._addFileChildren(
    PrivateUserDashboardCvsCvIdRouteChildren,
  )

interface PrivateUserDashboardRouteChildren {
  PrivateUserDashboardCvsCvIdRoute: typeof PrivateUserDashboardCvsCvIdRouteWithChildren
  PrivateUserDashboardCoverLetterIndexRoute: typeof PrivateUserDashboardCoverLetterIndexRoute
  PrivateUserDashboardCvsIndexRoute: typeof PrivateUserDashboardCvsIndexRoute
  PrivateUserDashboardResignationLetterIndexRoute: typeof PrivateUserDashboardResignationLetterIndexRoute
}

const PrivateUserDashboardRouteChildren: PrivateUserDashboardRouteChildren = {
  PrivateUserDashboardCvsCvIdRoute:
    PrivateUserDashboardCvsCvIdRouteWithChildren,
  PrivateUserDashboardCoverLetterIndexRoute:
    PrivateUserDashboardCoverLetterIndexRoute,
  PrivateUserDashboardCvsIndexRoute: PrivateUserDashboardCvsIndexRoute,
  PrivateUserDashboardResignationLetterIndexRoute:
    PrivateUserDashboardResignationLetterIndexRoute,
}

const PrivateUserDashboardRouteWithChildren =
  PrivateUserDashboardRoute._addFileChildren(PrivateUserDashboardRouteChildren)

interface PrivateRouteChildren {
  PrivateAdminDashboardRoute: typeof PrivateAdminDashboardRouteWithChildren
  PrivateUserDashboardRoute: typeof PrivateUserDashboardRouteWithChildren
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateAdminDashboardRoute: PrivateAdminDashboardRouteWithChildren,
  PrivateUserDashboardRoute: PrivateUserDashboardRouteWithChildren,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

interface PublicRouteChildren {
  PublicForbiddenRoute: typeof PublicForbiddenRoute
}

const PublicRouteChildren: PublicRouteChildren = {
  PublicForbiddenRoute: PublicForbiddenRoute,
}

const PublicRouteWithChildren =
  PublicRoute._addFileChildren(PublicRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PublicRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/admin-dashboard': typeof PrivateAdminDashboardRouteWithChildren
  '/user-dashboard': typeof PrivateUserDashboardRouteWithChildren
  '/forbidden': typeof PublicForbiddenRoute
  '/activation-account/$token': typeof AuthActivationAccountTokenRoute
  '/admin-dashboard/dashboard': typeof PrivateAdminDashboardDashboardRoute
  '/oauth2/$provider/callback': typeof Oauth2ProviderCallbackRoute
  '/activation-account': typeof AuthActivationAccountIndexRoute
  '/user-dashboard/cvs/$cvId': typeof PrivateUserDashboardCvsCvIdRouteWithChildren
  '/user-dashboard/cover-letter': typeof PrivateUserDashboardCoverLetterIndexRoute
  '/user-dashboard/cvs': typeof PrivateUserDashboardCvsIndexRoute
  '/user-dashboard/resignation-letter': typeof PrivateUserDashboardResignationLetterIndexRoute
  '/user-dashboard/cvs/$cvId/contact': typeof PrivateUserDashboardCvsCvIdContactIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicRouteWithChildren
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/login': typeof AuthLoginRoute
  '/register': typeof AuthRegisterRoute
  '/admin-dashboard': typeof PrivateAdminDashboardRouteWithChildren
  '/user-dashboard': typeof PrivateUserDashboardRouteWithChildren
  '/forbidden': typeof PublicForbiddenRoute
  '/activation-account/$token': typeof AuthActivationAccountTokenRoute
  '/admin-dashboard/dashboard': typeof PrivateAdminDashboardDashboardRoute
  '/oauth2/$provider/callback': typeof Oauth2ProviderCallbackRoute
  '/activation-account': typeof AuthActivationAccountIndexRoute
  '/user-dashboard/cvs/$cvId': typeof PrivateUserDashboardCvsCvIdRouteWithChildren
  '/user-dashboard/cover-letter': typeof PrivateUserDashboardCoverLetterIndexRoute
  '/user-dashboard/cvs': typeof PrivateUserDashboardCvsIndexRoute
  '/user-dashboard/resignation-letter': typeof PrivateUserDashboardResignationLetterIndexRoute
  '/user-dashboard/cvs/$cvId/contact': typeof PrivateUserDashboardCvsCvIdContactIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_private': typeof PrivateRouteWithChildren
  '/_public': typeof PublicRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/register': typeof AuthRegisterRoute
  '/_private/admin-dashboard': typeof PrivateAdminDashboardRouteWithChildren
  '/_private/user-dashboard': typeof PrivateUserDashboardRouteWithChildren
  '/_public/forbidden': typeof PublicForbiddenRoute
  '/_auth/activation-account/$token': typeof AuthActivationAccountTokenRoute
  '/_private/admin-dashboard/dashboard': typeof PrivateAdminDashboardDashboardRoute
  '/oauth2/$provider/callback': typeof Oauth2ProviderCallbackRoute
  '/_auth/activation-account/': typeof AuthActivationAccountIndexRoute
  '/_private/user-dashboard/cvs/$cvId': typeof PrivateUserDashboardCvsCvIdRouteWithChildren
  '/_private/user-dashboard/cover-letter/': typeof PrivateUserDashboardCoverLetterIndexRoute
  '/_private/user-dashboard/cvs/': typeof PrivateUserDashboardCvsIndexRoute
  '/_private/user-dashboard/resignation-letter/': typeof PrivateUserDashboardResignationLetterIndexRoute
  '/_private/user-dashboard/cvs/$cvId/contact/': typeof PrivateUserDashboardCvsCvIdContactIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/admin-dashboard'
    | '/user-dashboard'
    | '/forbidden'
    | '/activation-account/$token'
    | '/admin-dashboard/dashboard'
    | '/oauth2/$provider/callback'
    | '/activation-account'
    | '/user-dashboard/cvs/$cvId'
    | '/user-dashboard/cover-letter'
    | '/user-dashboard/cvs'
    | '/user-dashboard/resignation-letter'
    | '/user-dashboard/cvs/$cvId/contact'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/forgot-password'
    | '/login'
    | '/register'
    | '/admin-dashboard'
    | '/user-dashboard'
    | '/forbidden'
    | '/activation-account/$token'
    | '/admin-dashboard/dashboard'
    | '/oauth2/$provider/callback'
    | '/activation-account'
    | '/user-dashboard/cvs/$cvId'
    | '/user-dashboard/cover-letter'
    | '/user-dashboard/cvs'
    | '/user-dashboard/resignation-letter'
    | '/user-dashboard/cvs/$cvId/contact'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_private'
    | '/_public'
    | '/_auth/forgot-password'
    | '/_auth/login'
    | '/_auth/register'
    | '/_private/admin-dashboard'
    | '/_private/user-dashboard'
    | '/_public/forbidden'
    | '/_auth/activation-account/$token'
    | '/_private/admin-dashboard/dashboard'
    | '/oauth2/$provider/callback'
    | '/_auth/activation-account/'
    | '/_private/user-dashboard/cvs/$cvId'
    | '/_private/user-dashboard/cover-letter/'
    | '/_private/user-dashboard/cvs/'
    | '/_private/user-dashboard/resignation-letter/'
    | '/_private/user-dashboard/cvs/$cvId/contact/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  PrivateRoute: typeof PrivateRouteWithChildren
  PublicRoute: typeof PublicRouteWithChildren
  Oauth2ProviderCallbackRoute: typeof Oauth2ProviderCallbackRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  PrivateRoute: PrivateRouteWithChildren,
  PublicRoute: PublicRouteWithChildren,
  Oauth2ProviderCallbackRoute: Oauth2ProviderCallbackRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/_private",
        "/_public",
        "/oauth2/$provider/callback"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/forgot-password",
        "/_auth/login",
        "/_auth/register",
        "/_auth/activation-account/$token",
        "/_auth/activation-account/"
      ]
    },
    "/_private": {
      "filePath": "_private.tsx",
      "children": [
        "/_private/admin-dashboard",
        "/_private/user-dashboard"
      ]
    },
    "/_public": {
      "filePath": "_public.tsx",
      "children": [
        "/_public/forbidden"
      ]
    },
    "/_auth/forgot-password": {
      "filePath": "_auth/forgot-password.tsx",
      "parent": "/_auth"
    },
    "/_auth/login": {
      "filePath": "_auth/login.tsx",
      "parent": "/_auth"
    },
    "/_auth/register": {
      "filePath": "_auth/register.tsx",
      "parent": "/_auth"
    },
    "/_private/admin-dashboard": {
      "filePath": "_private/admin-dashboard.tsx",
      "parent": "/_private",
      "children": [
        "/_private/admin-dashboard/dashboard"
      ]
    },
    "/_private/user-dashboard": {
      "filePath": "_private/user-dashboard.tsx",
      "parent": "/_private",
      "children": [
        "/_private/user-dashboard/cvs/$cvId",
        "/_private/user-dashboard/cover-letter/",
        "/_private/user-dashboard/cvs/",
        "/_private/user-dashboard/resignation-letter/"
      ]
    },
    "/_public/forbidden": {
      "filePath": "_public/forbidden.tsx",
      "parent": "/_public"
    },
    "/_auth/activation-account/$token": {
      "filePath": "_auth/activation-account/$token.tsx",
      "parent": "/_auth"
    },
    "/_private/admin-dashboard/dashboard": {
      "filePath": "_private/admin-dashboard/dashboard.tsx",
      "parent": "/_private/admin-dashboard"
    },
    "/oauth2/$provider/callback": {
      "filePath": "oauth2.$provider.callback.tsx"
    },
    "/_auth/activation-account/": {
      "filePath": "_auth/activation-account/index.tsx",
      "parent": "/_auth"
    },
    "/_private/user-dashboard/cvs/$cvId": {
      "filePath": "_private/user-dashboard/cvs/$cvId.tsx",
      "parent": "/_private/user-dashboard",
      "children": [
        "/_private/user-dashboard/cvs/$cvId/contact/"
      ]
    },
    "/_private/user-dashboard/cover-letter/": {
      "filePath": "_private/user-dashboard/cover-letter/index.tsx",
      "parent": "/_private/user-dashboard"
    },
    "/_private/user-dashboard/cvs/": {
      "filePath": "_private/user-dashboard/cvs/index.tsx",
      "parent": "/_private/user-dashboard"
    },
    "/_private/user-dashboard/resignation-letter/": {
      "filePath": "_private/user-dashboard/resignation-letter/index.tsx",
      "parent": "/_private/user-dashboard"
    },
    "/_private/user-dashboard/cvs/$cvId/contact/": {
      "filePath": "_private/user-dashboard/cvs/$cvId/contact/index.tsx",
      "parent": "/_private/user-dashboard/cvs/$cvId"
    }
  }
}
ROUTE_MANIFEST_END */
